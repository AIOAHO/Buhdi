{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport api from \"./api\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar isWeb = Platform.OS === 'web';\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var response = yield api.post('/login', {\n        email: email,\n        password: password\n      });\n      if (response.status === 200 && response.data.token) {\n        if (isWeb) {\n          window.localStorage.setItem('jwtToken', response.data.token);\n          window.localStorage.setItem('userId', response.data.userId);\n        } else {\n          yield AsyncStorage.setItem('jwtToken', response.data.token);\n          yield AsyncStorage.setItem('userId', response.data.userId);\n        }\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var validateEmail = function validateEmail(email) {\n  var pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n  return pattern.test(email);\n};\nexport var validatePassword = function validatePassword(password) {\n  var minChar = 8;\n  var hasNumber = /\\d/;\n  var hasUpper = /[A-Z]/;\n  var hasLower = /[a-z]/;\n  var hasSpecialChar = /[^A-Za-z0-9]/;\n  return password.length >= minChar && hasNumber.test(password) && hasUpper.test(password) && hasLower.test(password) && hasSpecialChar.test(password);\n};\nexport var register = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password) {\n    if (!validateEmail(email)) {\n      console.error('Registration error: Invalid email format.');\n      return false;\n    }\n    if (!validatePassword(password)) {\n      console.error('Registration error: Password does not meet security requirements.');\n      return false;\n    }\n    try {\n      var response = yield api.post('/register', {\n        email: email,\n        password: password\n      });\n      if (response.status === 201) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  });\n  return function register(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var logout = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    try {\n      if (isWeb) {\n        window.localStorage.removeItem('jwtToken');\n      } else {\n        yield AsyncStorage.removeItem('jwtToken');\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  });\n  return function logout() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["api","Platform","AsyncStorage","isWeb","OS","login","_ref","_asyncToGenerator","email","password","response","post","status","data","token","window","localStorage","setItem","userId","error","console","_x","_x2","apply","arguments","validateEmail","pattern","test","validatePassword","minChar","hasNumber","hasUpper","hasLower","hasSpecialChar","length","register","_ref2","_x3","_x4","logout","_ref3","removeItem"],"sources":["/Users/kimlyonshernandez/CODE/budhi/Buhdi/Client/src/utils/auth.ts"],"sourcesContent":["import api from './api';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst isWeb = Platform.OS === 'web';\n\n\nexport const login = async (email: string, password: string): Promise<boolean> => {\n  try {\n    const response = await api.post('/login', { email, password });\n\n    if (response.status === 200 && response.data.token) {\n      if (isWeb) {\n        window.localStorage.setItem('jwtToken', response.data.token);\n        window.localStorage.setItem('userId', response.data.userId)\n      } else {\n        await AsyncStorage.setItem('jwtToken', response.data.token);\n        await AsyncStorage.setItem('userId', response.data.userId)\n      }\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('Login error:', error);\n    return false;\n  }\n};\n\nexport const validateEmail = (email) => {\n  const pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n  return pattern.test(email);\n};\n\nexport const validatePassword = (password) => {\n  const minChar = 8;\n  const hasNumber = /\\d/;\n  const hasUpper = /[A-Z]/;\n  const hasLower = /[a-z]/;\n  const hasSpecialChar = /[^A-Za-z0-9]/;\n  return (\n    password.length >= minChar &&\n    hasNumber.test(password) &&\n    hasUpper.test(password) &&\n    hasLower.test(password) &&\n    hasSpecialChar.test(password)\n  );\n};\n\nexport const register = async (email: string, password: string): Promise<boolean> => {\n  // Validate email and password before attempting to register\n  if (!validateEmail(email)) {\n    console.error('Registration error: Invalid email format.');\n    return false;\n  }\n  if (!validatePassword(password)) {\n    console.error('Registration error: Password does not meet security requirements.');\n    return false;\n  }\n\n  try {\n    const response = await api.post('/register', { email, password });\n\n    if (response.status === 201) {\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('Registration error:', error);\n    return false;\n  }\n};\n\n\nexport const logout = async (): Promise<void> => {\n  try {\n    if (isWeb) {\n      window.localStorage.removeItem('jwtToken');\n    } else {\n      await AsyncStorage.removeItem('jwtToken');\n    }\n  } catch (error) {\n    console.error('Logout error:', error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}