{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card, Text, Button, ActivityIndicator } from 'react-native-paper';\nimport { enneagramTypeMapping } from \"../Quiz/EnneagramQuestions\";\nimport api from \"../../utils/api\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EnneagramResults = function EnneagramResults(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    highestScoreType = _route$params.highestScoreType,\n    typeScores = _route$params.typeScores;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    result = _useState2[0],\n    setResult = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchUserId = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (Platform.OS === 'web') {\n          return window.localStorage.getItem('userId');\n        } else {\n          return yield AsyncStorage.getItem('userId');\n        }\n      });\n      return function fetchUserId() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var saveResultsAndGetAnalysis = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          var userId = yield fetchUserId();\n          if (!userId) {\n            throw new Error('User ID not found');\n          }\n          var fullTypeName = enneagramTypeMapping[highestScoreType];\n          yield api.post('/save-enneagram-results', {\n            enneagramType: fullTypeName,\n            userId: userId,\n            typeScores: typeScores\n          });\n          console.log('Results saved successfully');\n          var analysisResponse = yield api.post('/get-enneagram-analysis', {\n            enneagramType: fullTypeName\n          });\n          setResult(analysisResponse.data.analysis);\n        } catch (error) {\n          console.error('Error processing results:', error);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function saveResultsAndGetAnalysis() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    if (highestScoreType) {\n      saveResultsAndGetAnalysis();\n    } else {\n      setLoading(false);\n    }\n  }, [highestScoreType]);\n  var handleAssistantButtonPress = function handleAssistantButtonPress() {\n    navigation.navigate('Chat');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Card, {\n      style: styles.card,\n      children: [_jsx(Card.Title, {\n        title: `Your Enneagram Type: ${enneagramTypeMapping[highestScoreType]}`\n      }), _jsx(Card.Content, {\n        children: loading ? _jsx(ActivityIndicator, {\n          animating: true,\n          size: \"large\"\n        }) : _jsx(_Fragment, {\n          children: _jsx(Text, {\n            style: styles.resultText,\n            children: result\n          })\n        })\n      })]\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: handleAssistantButtonPress,\n      style: styles.button,\n      disabled: loading,\n      children: \"Chat with your Assistant\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 400,\n    alignSelf: 'center'\n  },\n  card: {\n    marginVertical: 10,\n    padding: 16,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    elevation: 4,\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  resultText: {\n    fontSize: 16,\n    marginTop: 10\n  },\n  button: {\n    margin: 10,\n    maxWidth: 400\n  }\n});\nexport default EnneagramResults;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","Card","Text","Button","ActivityIndicator","enneagramTypeMapping","api","Platform","AsyncStorage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","EnneagramResults","_ref","route","navigation","_route$params","params","highestScoreType","typeScores","_useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","loading","setLoading","fetchUserId","_ref2","_asyncToGenerator","OS","window","localStorage","getItem","apply","arguments","saveResultsAndGetAnalysis","_ref3","userId","Error","fullTypeName","post","enneagramType","console","log","analysisResponse","data","analysis","error","handleAssistantButtonPress","navigate","style","styles","container","children","card","Title","title","Content","animating","size","resultText","mode","onPress","button","disabled","create","flex","justifyContent","padding","alignItems","width","maxWidth","alignSelf","marginVertical","backgroundColor","borderRadius","elevation","shadowOpacity","shadowRadius","shadowOffset","height","fontSize","marginTop","margin"],"sources":["/Users/kimlyonshernandez/CODE/budhi/Buhdi/Client/src/components/Screens/EnneagramResultsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Card, Text, Button, ActivityIndicator } from 'react-native-paper';\nimport { enneagramTypeMapping } from '../Quiz/EnneagramQuestions';\nimport api from '../../utils/api';\nimport { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport CircularBarChart from '../Results/CircularBarChart';\n\nconst EnneagramResults = ({ route, navigation }) => {\n  const { highestScoreType, typeScores } = route.params;\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserId = async () => {\n      if (Platform.OS === 'web') {\n        return window.localStorage.getItem('userId');\n      } else {\n        return await AsyncStorage.getItem('userId');\n      }\n    };\n\n    const saveResultsAndGetAnalysis = async () => {\n      try {\n        setLoading(true);\n        const userId = await fetchUserId();\n        \n        if (!userId) {\n          throw new Error('User ID not found');\n        }\n\n        const fullTypeName = enneagramTypeMapping[highestScoreType];\n        // Step 1: Save the quiz results\n        await api.post('/save-enneagram-results', { enneagramType: fullTypeName, userId, typeScores });\n        console.log('Results saved successfully');\n\n        // Step 2: Fetch the enneagram analysis\n        const analysisResponse = await api.post('/get-enneagram-analysis', { enneagramType: fullTypeName });\n        setResult(analysisResponse.data.analysis);\n      } catch (error) {\n        console.error('Error processing results:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (highestScoreType) {\n      saveResultsAndGetAnalysis();\n    } else {\n      setLoading(false);\n    }\n  }, [highestScoreType]);\n\n  const handleAssistantButtonPress = () => {\n    navigation.navigate('Chat');\n  };\n\n\n\n  return (\n    <View style={styles.container}>\n      <Card style={styles.card}>\n        <Card.Title title={`Your Enneagram Type: ${enneagramTypeMapping[highestScoreType]}`} />\n        <Card.Content>\n          {loading ? (\n            <ActivityIndicator animating={true} size=\"large\" />\n          ) : (\n            <>\n              \n              \n              \n              <Text style={styles.resultText}>{result}</Text>\n            </>\n          )}\n        </Card.Content>\n      </Card>\n      <Button\n        mode=\"contained\"\n        onPress={handleAssistantButtonPress}\n        style={styles.button}\n        disabled={loading}\n      >\n        Chat with your Assistant\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 400, // Set a maximum width for the container\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 10,\n    padding: 16,\n    backgroundColor: 'white',\n    borderRadius: 8,\n    elevation: 4,\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  resultText: {\n    fontSize: 16,\n    marginTop: 10,\n  },\n  button: {\n    margin: 10,\n    maxWidth: 400,\n  },\n});\n\nexport default EnneagramResults;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}