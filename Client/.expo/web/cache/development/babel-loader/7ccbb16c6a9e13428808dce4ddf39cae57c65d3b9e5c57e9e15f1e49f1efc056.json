{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RadioButton, Text, Card } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Question = function Question(_ref) {\n  var question = _ref.question,\n    onAnswer = _ref.onAnswer,\n    selectedScore = _ref.selectedScore;\n  var labels = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Card, {\n      style: styles.card,\n      children: _jsx(Card.Content, {\n        style: styles.cardContent,\n        children: _jsx(Text, {\n          style: styles.questionText,\n          children: question.text\n        })\n      })\n    }), _jsx(RadioButton.Group, {\n      onValueChange: function onValueChange(newValue) {\n        return onAnswer(Number(newValue));\n      },\n      value: String(selectedScore),\n      children: _jsx(View, {\n        style: styles.optionsContainer,\n        children: labels.map(function (label, index) {\n          return _jsx(View, {\n            style: styles.option,\n            children: _jsx(RadioButton.Android, {\n              value: label,\n              color: '#6200ee',\n              uncheckedColor: '#6210ee'\n            })\n          }, label);\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.labelsContainer,\n      children: [_jsx(Text, {\n        style: styles.labelText,\n        children: \"Inaccurate\"\n      }), _jsx(Text, {\n        style: styles.labelText,\n        children: \"Neutral\"\n      }), _jsx(Text, {\n        style: styles.labelText,\n        children: \"Accurate\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  card: {\n    width: '100%',\n    height: 150,\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  cardContent: {\n    alignItems: 'center'\n  },\n  questionText: {\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  option: {\n    alignItems: 'center'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  },\n  labelsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  labelText: {\n    fontSize: 14,\n    marginRight: 15\n  }\n});\nexport default Question;","map":{"version":3,"names":["React","View","StyleSheet","RadioButton","Text","Card","jsx","_jsx","jsxs","_jsxs","Question","_ref","question","onAnswer","selectedScore","labels","style","styles","container","children","card","Content","cardContent","questionText","text","Group","onValueChange","newValue","Number","value","String","optionsContainer","map","label","index","option","Android","color","uncheckedColor","labelsContainer","labelText","create","alignItems","width","height","justifyContent","marginBottom","fontSize","textAlign","flexDirection","marginRight"],"sources":["/Users/kimlyonshernandez/CODE/budhi/Buhdi/Client/src/components/Quiz/Question.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { RadioButton, Text, Card } from 'react-native-paper';\n\nconst Question = ({ question, onAnswer, selectedScore }) => {\n  const labels = [\"1\", \"2\", \"3\", \"4\", \"5\"]; // Labels for your radio buttons\n\n  return (\n      <View style={styles.container}>\n        <Card style={styles.card}>\n            <Card.Content style={styles.cardContent}>\n              <Text style={styles.questionText}>{question.text}</Text>\n            </Card.Content>\n        </Card>\n\n\n\n        <RadioButton.Group onValueChange={newValue => onAnswer(Number(newValue))} value={String(selectedScore)}>\n            <View style={styles.optionsContainer}>\n              {labels.map((label, index) => (\n                <View key={label} style={styles.option}>\n                  <RadioButton.Android\n                    value={label}\n                    color={'#6200ee'} // Purple color for radio button\n                    uncheckedColor={'#6210ee'} \n                  />\n                </View>\n              ))}\n            </View>\n        </RadioButton.Group>\n\n        <View style={styles.labelsContainer}>\n            <Text style={styles.labelText}>Inaccurate</Text>\n            <Text style={styles.labelText}>Neutral</Text>\n            <Text style={styles.labelText}>Accurate</Text>\n        </View>\n\n      </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  card: {\n    width: '100%',\n    height: 150,\n    justifyContent: 'center',\n    marginBottom: 20,\n  },\n  cardContent: {\n    alignItems: 'center', // Centering text in the card\n  },\n  questionText: {\n    fontSize: 16,\n    textAlign: 'center', // Center align the question text\n  },\n  option: {\n    alignItems: 'center',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between', // Distribute radio buttons evenly\n    marginBottom: 10,\n  },\n  labelsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center', // Center the labels\n    marginBottom: 10, // Adjust the spacing as needed\n  },\n  labelText: {\n    fontSize: 14, // Adjust the font size as needed\n    marginRight: 15, // Add space to the right of each label\n  },\n});\n\nexport default Question;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}