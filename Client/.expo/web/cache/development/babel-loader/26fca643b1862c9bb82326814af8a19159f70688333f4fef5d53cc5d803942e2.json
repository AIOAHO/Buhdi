{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Button, Card, Paragraph, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport api from \"../../utils/api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var navigation = useNavigation();\n  var flatListRef = useRef(null);\n  var animation = new Animated.Value(0);\n  var handleSendMessage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (input.trim() === '') return;\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [{\n          sender: 'User',\n          content: input\n        }]);\n      });\n      setTimeout(function () {\n        setMessages(function (prevMessages) {\n          return [].concat(_toConsumableArray(prevMessages), [{\n            sender: 'Placeholder',\n            content: '...'\n          }]);\n        });\n      }, 1000);\n      try {\n        var userId;\n        var jwtToken;\n        if (Platform.OS === 'web') {\n          userId = window.localStorage.getItem('userId');\n          jwtToken = window.localStorage.getItem('jwtToken');\n        } else {\n          userId = yield AsyncStorage.getItem('userId');\n          jwtToken = yield AsyncStorage.getItem('jwtToken');\n        }\n        var response = yield api.post('/chat', {\n          userId: userId,\n          message: input\n        });\n        setMessages(function (prevMessages) {\n          return prevMessages.map(function (message, index) {\n            if (message.sender === 'Placeholder') {\n              return _objectSpread(_objectSpread({}, message), {}, {\n                sender: 'Buhdi',\n                content: response.data.response\n              });\n            }\n            return message;\n          });\n        });\n      } catch (error) {\n        console.error('Error sending message to back:', error);\n      } finally {\n        setInput('');\n      }\n    });\n    return function handleSendMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Card, {\n      children: _jsx(Card.Title, {\n        title: \"Buhdi\",\n        subtitle: \"Always here for you.\",\n        left: function left(props) {\n          return _jsx(Avatar.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"robot\"\n          }));\n        }\n      })\n    }), _jsx(FlatList, {\n      data: messages,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        if (item.sender === 'Placeholder') {\n          return _jsxs(Card, {\n            style: styles.placeholderCard,\n            children: [_jsx(Card.Title, {\n              title: \"Buhdi\"\n            }), _jsx(Card.Content, {\n              children: _jsx(Paragraph, {\n                children: \"...\"\n              })\n            })]\n          });\n        }\n        return _jsxs(Card, {\n          style: styles.card,\n          children: [_jsx(Card.Title, {\n            title: item.sender\n          }), _jsx(Card.Content, {\n            children: _jsx(Paragraph, {\n              children: item.content\n            })\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      ref: flatListRef,\n      onContentSizeChange: function onContentSizeChange() {\n        return flatListRef.current.scrollToEnd({\n          animated: true\n        });\n      },\n      onLayout: function onLayout() {\n        return flatListRef.current.scrollToEnd({\n          animated: true\n        });\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: input,\n        onChangeText: setInput,\n        placeholder: \"Type your message...\",\n        onSubmitEditing: handleSendMessage,\n        returnKeyType: \"send\"\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: handleSendMessage,\n        children: \"Send\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginRight: 10\n  },\n  typingContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  dot: {\n    height: 8,\n    width: 8,\n    borderRadius: 4,\n    backgroundColor: '#000',\n    marginHorizontal: 2\n  },\n  card: {\n    margin: 10\n  },\n  placeholderCard: {\n    margin: 10\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","TextInput","FlatList","StyleSheet","Animated","Button","Card","Paragraph","Avatar","useNavigation","api","AsyncStorage","Platform","jsx","_jsx","jsxs","_jsxs","ChatScreen","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","navigation","flatListRef","animation","Value","handleSendMessage","_ref","_asyncToGenerator","trim","prevMessages","concat","_toConsumableArray","sender","content","setTimeout","userId","jwtToken","OS","window","localStorage","getItem","response","post","message","map","index","_objectSpread","data","error","console","apply","arguments","style","styles","container","children","Title","title","subtitle","left","props","Icon","icon","renderItem","_ref2","item","placeholderCard","Content","card","keyExtractor","toString","ref","onContentSizeChange","current","scrollToEnd","animated","onLayout","inputContainer","value","onChangeText","placeholder","onSubmitEditing","returnKeyType","mode","onPress","create","flex","padding","flexDirection","alignItems","justifyContent","marginTop","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingVertical","marginRight","typingContainer","dot","height","width","backgroundColor","marginHorizontal","margin"],"sources":["/Users/kimlyonshernandez/CODE/budhi/Buhdi/Client/src/components/Screens/ChatScreen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { View, TextInput, FlatList, StyleSheet, Animated } from 'react-native';\nimport { Button, Card, Title, Paragraph, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport api from '../../utils/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\n\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const navigation = useNavigation();\n  const flatListRef = useRef(null);\n  const animation = new Animated.Value(0);\n\n  interface Message {\n    sender: string;\n    content: any;\n  }\n\n  const handleSendMessage = async () => {\n   if (input.trim() === '') return; // Prevent sending empty messages\n\n   // Add user's message to messages array\n   setMessages((prevMessages) => [...prevMessages, { sender: 'User', content: input }]);\n\n   // short timeout before placeholder shows\n   setTimeout(() => {\n    // Add placeholder message to messages array\n    setMessages((prevMessages) => [...prevMessages, { sender: 'Placeholder', content: '...' }]);\n    }, 1000);\n\n\n\n    \n      // Code to send the message to the server and handle response remains unchanged\n    try {\n      // Get the userId and jwtToken from AsyncStorage\n      let userId;\n      let jwtToken;\n      if (Platform.OS === 'web') {\n\n        userId = window.localStorage.getItem('userId');\n        jwtToken = window.localStorage.getItem('jwtToken');\n      } else {\n        userId = await AsyncStorage.getItem('userId');\n        jwtToken = await AsyncStorage.getItem('jwtToken');\n      }\n\n          // Send the message to the server\n          const response = await api.post('/chat', {userId: userId, message: input });\n          \n          // Add the assistant's response to the messages array\n          setMessages((prevMessages) => prevMessages.map((message, index) => {\n            if (message.sender === 'Placeholder') {\n              return { ...message, sender: 'Buhdi', content: response.data.response };\n            }\n            return message;\n            }));\n        } catch (error) {\n        \n          console.error('Error sending message to back:', error);\n    } finally {\n          // Set pendingResponse to false to hide the placeholder card\n\n      setInput(''); // Clear input field\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Card>\n        <Card.Title title=\"Buhdi\" subtitle=\"Always here for you.\" left={props => <Avatar.Icon {...props} icon=\"robot\" />} />\n      </Card>\n      <FlatList\n        data={messages}\n        renderItem={({ item }) => {\n          if (item.sender === 'Placeholder') {\n             return (\n               <Card style={styles.placeholderCard}>\n                 <Card.Title title=\"Buhdi\" />\n                 <Card.Content>\n                   <Paragraph>...</Paragraph>\n                 </Card.Content>\n               </Card>\n             );\n          }\n          return (\n             <Card style={styles.card}>\n               <Card.Title title={item.sender} />\n               <Card.Content>\n                 <Paragraph>{item.content}</Paragraph>\n               </Card.Content>\n             </Card>\n          );\n         }}\n         \n        keyExtractor={(item, index) => index.toString()}\n        ref={flatListRef}\n        onContentSizeChange={() => flatListRef.current.scrollToEnd({ animated: true })}\n        onLayout={() => flatListRef.current.scrollToEnd({ animated: true })}\n      />\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          value={input}\n          onChangeText={setInput}\n          placeholder=\"Type your message...\"\n          onSubmitEditing={handleSendMessage} // Add this line\n          returnKeyType=\"send\" // Optional: changes the return key to say \"Send\"\n        />\n        <Button mode=\"contained\" onPress={handleSendMessage}>Send</Button>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 10,\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginRight: 10,\n  },\n  typingContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dot: {\n    height: 8,\n    width: 8,\n    borderRadius: 4,\n    backgroundColor: '#000',\n    marginHorizontal: 2,\n  },\n  card: {\n    margin: 10\n    },\n  placeholderCard: {\n    margin: 10\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}